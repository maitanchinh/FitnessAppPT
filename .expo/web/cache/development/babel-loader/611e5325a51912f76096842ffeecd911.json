{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    _classCallCheck(this, Chat);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.body\n      }, React.createElement(View, {\n        style: styles.searchBox\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {}\n      }, React.createElement(AntDesign, {\n        name: \"search1\",\n        size: 20,\n        style: {\n          marginHorizontal: 10,\n          color: '#97B2FF'\n        }\n      })), React.createElement(TextInput, {\n        placeholder: \"Search...\"\n      })), React.createElement(FlatList, {\n        style: {\n          marginHorizontal: 20\n        },\n        data: [{\n          avt: require(\"../../asserts/images/avatar.png\"),\n          name: 'Le Van A',\n          message: 'Help me!',\n          read: false\n        }, {\n          avt: require(\"../../asserts/images/avatar.png\"),\n          name: 'Nguyen Van B',\n          message: 'How are you?',\n          read: true\n        }],\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            style: styles.conversation,\n            onPress: function onPress() {\n              return _this.props.navigation.navigate('ChatBox', {\n                name: item.name,\n                message: item.message,\n                avatar: item.avt\n              });\n            }\n          }, React.createElement(Image, {\n            source: item.avt,\n            style: styles.avatar\n          }), React.createElement(View, {\n            style: {\n              flexDirection: 'column',\n              justifyContent: 'space-evenly',\n              height: 65\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: '500'\n            }\n          }, item.name), React.createElement(Text, {\n            style: {\n              fontSize: 16\n            }\n          }, item.message)));\n        }\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  searchBox: {\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: '#97B2FF',\n    padding: 5,\n    flexDirection: 'row',\n    marginHorizontal: 10,\n    marginVertical: 20\n  },\n  body: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  conversation: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    height: 85\n  },\n  avatar: {\n    height: 65,\n    width: 65,\n    marginRight: 30\n  }\n});\nexport default Chat;","map":{"version":3,"sources":["D:/school/react native project/project/source/chat/Chat.tsx"],"names":["React","AntDesign","Chat","styles","body","searchBox","marginHorizontal","color","avt","require","name","message","read","item","conversation","props","navigation","navigate","avatar","flexDirection","justifyContent","height","fontSize","fontWeight","Component","StyleSheet","create","container","flex","borderWidth","borderRadius","borderColor","padding","marginVertical","backgroundColor","alignItems","width","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FlatList, Image, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nclass Chat extends React.Component {\r\n    // constructor (props) {\r\n    //     super(props)\r\n    //     this.state = \r\n    // }\r\n    render() {\r\n        return (\r\n            <View style={styles.body}>\r\n                <View style={styles.searchBox}>\r\n                    <TouchableOpacity onPress={() => { }}>\r\n                        <AntDesign\r\n                            name=\"search1\"\r\n                            size={20}\r\n                            style={{ marginHorizontal: 10, color: '#97B2FF' }}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TextInput placeholder=\"Search...\" />\r\n                </View>\r\n                <FlatList\r\n                    style={{ marginHorizontal: 20 }}\r\n                    data={[\r\n                        {\r\n                            avt: require('../../asserts/images/avatar.png'),\r\n                            name: 'Le Van A',\r\n                            message: 'Help me!',\r\n                            read: false\r\n                        },\r\n                        {\r\n                            avt: require('../../asserts/images/avatar.png'),\r\n                            name: 'Nguyen Van B',\r\n                            message: 'How are you?',\r\n                            read: true\r\n                        }\r\n                    ]}\r\n                    renderItem={({ item }) => (\r\n                        <TouchableOpacity style={styles.conversation}\r\n                            onPress={() => this.props.navigation.navigate('ChatBox',\r\n                            {\r\n                                name: item.name,\r\n                                message: item.message,\r\n                                avatar: item.avt\r\n                            })}>\r\n                            <Image\r\n                                source={item.avt}\r\n                                style={styles.avatar} />\r\n                            <View style={{ flexDirection: 'column', justifyContent: 'space-evenly', height: 65 }}>\r\n                                <Text style={{ fontSize: 20, fontWeight: '500' }}>{item.name}</Text>\r\n                                <Text style={{ fontSize: 16 }}>{item.message}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                />\r\n                {/* <ScrollView style={{marginHorizontal: 20 }}>\r\n                <TouchableOpacity style={styles.conversation}>\r\n                    <Image\r\n                        source={require('../../asserts/images/avatar.png')}\r\n                        style={styles.avatar} />\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'space-evenly', height: 65 }}>\r\n                        <Text style={{ fontSize: 20, fontWeight: '500' }}>Le Van A</Text>\r\n                        <Text style={{ fontSize: 16 }}>GoodLuck =))</Text>\r\n                    </View>\r\n                    <Image source={require('../../asserts/images/new_message.png')}\r\n                        style={{ height: 16, width: 16, borderRadius: 8, right: 5, position: 'absolute'}} />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.conversation}>\r\n                    <Image\r\n                        source={require('../../asserts/images/avatar.png')}\r\n                        style={styles.avatar} />\r\n                    <View style={{ flexDirection: 'column', justifyContent: 'space-evenly', height: 65 }}>\r\n                        <Text style={{ fontSize: 20, fontWeight: '500' }}>Le Van A</Text>\r\n                        <Text style={{ fontSize: 16 }}>GoodLuck =))</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </ScrollView> */}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        // backgroundColor: '#FFFFFF',\r\n    },\r\n    searchBox: {\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        borderColor: '#97B2FF',\r\n        padding: 5,\r\n        flexDirection: 'row',\r\n        marginHorizontal: 10,\r\n        marginVertical: 20\r\n    },\r\n    body: {\r\n        flex: 1,\r\n        backgroundColor: 'white'\r\n    },\r\n    conversation: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        height: 85\r\n    },\r\n    avatar: {\r\n        height: 65,\r\n        width: 65,\r\n        marginRight: 30\r\n    }\r\n})\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}