{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation, useRoute } from \"@react-navigation/core\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nvar ChatBox = function ChatBox() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      messages = _React$useState2[0],\n      setMessages = _React$useState2[1];\n\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _onSend = React.useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  React.useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: route.params.message,\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'Nguyen Huy Hoang',\n        avatar: route.params.avt\n      }\n    }]);\n  }, []);\n  return React.createElement(View, {\n    style: styles.mainbox\n  }, React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: 1\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  mainbox: {\n    textAlign: 'center',\n    margin: 0,\n    flex: 5,\n    justifyContent: 'space-between'\n  }\n});\nexport default ChatBox;","map":{"version":3,"sources":["D:/school/react native project/project/source/chat/ChatBox.tsx"],"names":["useNavigation","useRoute","React","GiftedChat","ChatBox","useState","messages","setMessages","navigation","route","onSend","useCallback","previousMessages","append","useEffect","_id","text","params","message","createdAt","Date","user","name","avatar","avt","styles","mainbox","StyleSheet","create","textAlign","margin","flex","justifyContent"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,wBAAxC;AACA,OAAOC,KAAP,MAAiC,OAAjC;;;AAGA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,wBAAgCF,KAAK,CAACG,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AACA,MAAMS,KAAK,GAAGR,QAAQ,EAAtB;;AACA,MAAMS,OAAM,GAAGR,KAAK,CAACS,WAAN,CAAkB,YAAmB;AAAA,QAAlBL,QAAkB,uEAAP,EAAO;AAChDC,IAAAA,WAAW,CAAC,UAAAK,gBAAgB;AAAA,aAAIT,UAAU,CAACU,MAAX,CAAkBD,gBAAlB,EAAoCN,QAApC,CAAJ;AAAA,KAAjB,CAAX;AACH,GAFc,EAEZ,EAFY,CAAf;;AAIAJ,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AAClBP,IAAAA,WAAW,CAAC,CACR;AACIQ,MAAAA,GAAG,EAAE,CADT;AAEIC,MAAAA,IAAI,EAAEP,KAAK,CAACQ,MAAN,CAAaC,OAFvB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHf;AAIIC,MAAAA,IAAI,EAAE;AACFN,QAAAA,GAAG,EAAE,CADH;AAEFO,QAAAA,IAAI,EAAE,kBAFJ;AAGFC,QAAAA,MAAM,EAAEd,KAAK,CAACQ,MAAN,CAAaO;AAHnB;AAJV,KADQ,CAAD,CAAX;AAYH,GAbD,EAaG,EAbH;AAcA,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAEpB,QADd;AAEI,IAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,aAAII,OAAM,CAACJ,QAAD,CAAV;AAAA,KAFpB;AAGI,IAAA,IAAI,EAAE;AACFS,MAAAA,GAAG,EAAE;AADH;AAHV,IADJ,CAFJ;AAaH,CAnCD;;AAsCA,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,OAAO,EAAE;AACLG,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,MAAM,EAAE,CAFH;AAGLC,IAAAA,IAAI,EAAE,CAHD;AAILC,IAAAA,cAAc,EAAE;AAJX;AADoB,CAAlB,CAAf;AAQA,eAAe5B,OAAf","sourcesContent":["import { useNavigation, useRoute } from \"@react-navigation/core\";\r\nimport React, { Component } from \"react\";\r\nimport { View, StyleSheet } from 'react-native';\r\n// import { Provider ,Appbar,Card} from 'react-native-paper';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\n\r\nconst ChatBox = () => {\r\n    const [messages, setMessages] = React.useState([]);\r\n    const navigation = useNavigation();\r\n    const route = useRoute();\r\n    const onSend = React.useCallback((messages = []) => {\r\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setMessages([\r\n            {\r\n                _id: 1,\r\n                text: route.params.message,\r\n                createdAt: new Date(),\r\n                user: {\r\n                    _id: 2,\r\n                    name: 'Nguyen Huy Hoang',\r\n                    avatar: route.params.avt,\r\n                },\r\n            },\r\n        ])\r\n    }, []);\r\n    return (\r\n        // <Provider>\r\n        <View style={styles.mainbox}>\r\n            <GiftedChat\r\n                messages={messages}\r\n                onSend={messages => onSend(messages)}\r\n                user={{\r\n                    _id: 1,\r\n                }}\r\n            />\r\n        </View>\r\n        // </Provider>\r\n    );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    mainbox: {\r\n        textAlign: 'center',\r\n        margin: 0,\r\n        flex: 5,\r\n        justifyContent: 'space-between',\r\n    }\r\n});\r\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}