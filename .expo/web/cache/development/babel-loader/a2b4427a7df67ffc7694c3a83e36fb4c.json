{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Exercise = function (_Component) {\n  _inherits(Exercise, _Component);\n\n  var _super = _createSuper(Exercise);\n\n  function Exercise() {\n    _classCallCheck(this, Exercise);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Exercise, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.body\n      }, React.createElement(View, {\n        style: styles.searchBox\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {}\n      }, React.createElement(AntDesign, {\n        name: \"search1\",\n        size: 20,\n        style: {\n          marginHorizontal: 10,\n          color: '#97B2FF'\n        }\n      })), React.createElement(TextInput, {\n        placeholder: \"Search...\"\n      })), React.createElement(View, {\n        style: {\n          width: 200,\n          marginVertical: 20,\n          alignSelf: 'flex-end'\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        }\n      }, \"Select Exercises:\"), React.createElement(FlatList, {\n        style: {\n          marginVertical: 20\n        },\n        data: [{\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Squats',\n          image: require(\"../../asserts/images/squats.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: true\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }, {\n          name: 'Warm up',\n          image: require(\"../../asserts/images/warmup.png\"),\n          calo: 100,\n          time: 12,\n          isChoose: false\n        }],\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            style: {\n              flexDirection: 'row',\n              marginVertical: 10\n            },\n            onPress: function onPress() {\n              _this.props.navigation.navigate('ExerciseDetail', {\n                name: item.name,\n                image: item.image,\n                calo: item.calo,\n                time: item.time\n              });\n            }\n          }, React.createElement(Image, {\n            source: item.image,\n            style: {\n              height: 70,\n              width: 70,\n              borderRadius: 35,\n              resizeMode: 'contain',\n              flex: 2\n            }\n          }), React.createElement(View, {\n            style: {\n              width: 130,\n              marginHorizontal: 20,\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n              flex: 7\n            }\n          }, React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 22,\n              fontWeight: 'bold',\n              flex: 6\n            }\n          }, item.name), React.createElement(Text, {\n            style: {\n              flex: 4,\n              fontSize: 20\n            }\n          }, item.time, \"x\")), React.createElement(Text, {\n            style: {\n              fontSize: 20,\n              color: '#707070'\n            }\n          }, item.calo, \" Calories Burn\")));\n        }\n      })), React.createElement(View, {\n        style: styles.touchableOpacityStyle\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('AddExercise');\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 35,\n          fontWeight: '300',\n          color: 'white'\n        }\n      }, \"+\"))));\n    }\n  }]);\n\n  return Exercise;\n}(Component);\n\nexport { Exercise as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  body: {\n    margin: 30\n  },\n  searchBox: {\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: '#97B2FF',\n    padding: 5,\n    flexDirection: 'row'\n  },\n  touchableOpacityStyle: {\n    position: 'absolute',\n    width: 50,\n    height: 50,\n    borderWidth: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 20,\n    bottom: 20,\n    borderRadius: 25,\n    backgroundColor: '#D2A4F3',\n    zIndex: 100\n  }\n});","map":{"version":3,"sources":["D:/school/react native project/project/source/exercises/Exercises.tsx"],"names":["React","Component","AntDesign","Exercise","styles","container","body","searchBox","marginHorizontal","color","width","marginVertical","alignSelf","fontSize","fontWeight","name","image","require","calo","time","isChoose","item","flexDirection","props","navigation","navigate","height","borderRadius","resizeMode","flex","justifyContent","alignItems","touchableOpacityStyle","StyleSheet","create","backgroundColor","margin","borderWidth","borderColor","padding","position","right","bottom","zIndex"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\r\nimport React, { Component, useState } from 'react';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport {\r\n    SafeAreaView,\r\n    FlatList,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    View,\r\n    Image,\r\n    Text,\r\n    StyleSheet,\r\n} from 'react-native';\r\nimport { open } from 'fs';\r\nexport default class Exercise extends Component {\r\n    // dropDown() {\r\n    //     let [open, setOpen] = useState(false);\r\n    //     let [value, setValue] = useState(null);\r\n    //     let [items, setItems] = useState([\r\n    //         { label: 'Lose weight', value: 'lose_weight' },\r\n    //         { label: 'Gain weight', value: 'gain_weight' },\r\n    //     ]);\r\n    // }\r\n    render() {\r\n\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <View style={styles.body}>\r\n                    <View style={styles.searchBox}>\r\n                        <TouchableOpacity onPress={() => { }}>\r\n                            <AntDesign\r\n                                name=\"search1\"\r\n                                size={20}\r\n                                style={{ marginHorizontal: 10, color: '#97B2FF' }}\r\n                            />\r\n                        </TouchableOpacity>\r\n                        <TextInput placeholder=\"Search...\" />\r\n                    </View>\r\n                    <View style={{ width: 200, marginVertical: 20, alignSelf: 'flex-end' }}>\r\n                        {/* <DropDownPicker\r\n                            open={this.dropDown}\r\n                            value={value}\r\n                            items={items}\r\n                            setOpen={setOpen}\r\n                            setValue={setValue}\r\n                            setItems={setItems}\r\n                            disableBorderRadius={true}\r\n                            style={{ borderRadius: 30, borderColor: '#97B2FF', height: 40 }}\r\n                            textStyle={{\r\n                                fontSize: 18,\r\n                                color: '#707070',\r\n                            }}\r\n                        /> */}\r\n                    </View>\r\n                    <Text style={{ fontSize: 20, fontWeight: 'bold' }}>\r\n                        Select Exercises:\r\n                    </Text>\r\n                    <FlatList\r\n                        style={{ marginVertical: 20 }}\r\n                        data={[\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Squats',\r\n                                image: require('../../asserts/images/squats.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: true,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                            {\r\n                                name: 'Warm up',\r\n                                image: require('../../asserts/images/warmup.png'),\r\n                                calo: 100,\r\n                                time: 12,\r\n                                isChoose: false,\r\n                            },\r\n                        ]}\r\n                        renderItem={({ item }) => (\r\n                            <TouchableOpacity\r\n                                style={{ flexDirection: 'row', marginVertical: 10 }}\r\n                                onPress={() => {\r\n                                    this.props.navigation.navigate('ExerciseDetail',\r\n                                        {\r\n                                            name: item.name,\r\n                                            image: item.image,\r\n                                            calo: item.calo,\r\n                                            time: item.time\r\n                                        })\r\n                                }}>\r\n                                <Image\r\n                                    source={item.image}\r\n                                    style={{\r\n                                        height: 70,\r\n                                        width: 70,\r\n                                        borderRadius: 35,\r\n                                        resizeMode: 'contain',\r\n                                        flex: 2,\r\n                                    }}\r\n                                />\r\n                                <View\r\n                                    style={{\r\n                                        width: 130,\r\n                                        marginHorizontal: 20,\r\n                                        flexDirection: 'column',\r\n                                        justifyContent: 'space-around',\r\n                                        flex: 7,\r\n                                    }}>\r\n                                    <View\r\n                                        style={{\r\n                                            flexDirection: 'row',\r\n                                            justifyContent: 'space-between',\r\n                                            alignItems: 'center',\r\n                                        }}>\r\n                                        <Text style={{ fontSize: 22, fontWeight: 'bold', flex: 6 }}>\r\n                                            {item.name}\r\n                                        </Text>\r\n                                        <Text style={{ flex: 4, fontSize: 20 }}>{item.time}x</Text>\r\n                                    </View>\r\n                                    <Text style={{ fontSize: 20, color: '#707070' }}>\r\n                                        {item.calo} Calories Burn\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    />\r\n                </View>\r\n                <View style={styles.touchableOpacityStyle}>\r\n                    <TouchableOpacity onPress={() => this.props.navigation.navigate('AddExercise')}>\r\n                        <Text style={{ fontSize: 35, fontWeight: '300', color: 'white' }}>+</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n// const Exercises = () => {\r\n//     const [open, setOpen] = useState(false);\r\n//     const [value, setValue] = useState(null);\r\n//     const [items, setItems] = useState([\r\n//         { label: 'Lose weight', value: 'lose_weight' },\r\n//         { label: 'Gain weight', value: 'gain_weight' },\r\n//     ]);\r\n//     const navigation = useNavigation();\r\n//     return (\r\n//         <SafeAreaView style={styles.container}>\r\n//             <View style={styles.body}>\r\n//                 <View style={styles.searchBox}>\r\n//                     <TouchableOpacity onPress={() => { }}>\r\n//                         <AntDesign\r\n//                             name=\"search1\"\r\n//                             size={20}\r\n//                             style={{ marginHorizontal: 10, color: '#97B2FF' }}\r\n//                         />\r\n//                     </TouchableOpacity>\r\n//                     <TextInput placeholder=\"Search...\" />\r\n//                 </View>\r\n//                 <View style={{ width: 200, marginVertical: 20, alignSelf: 'flex-end' }}>\r\n//                     <DropDownPicker\r\n//                         open={open}\r\n//                         value={value}\r\n//                         items={items}\r\n//                         setOpen={setOpen}\r\n//                         setValue={setValue}\r\n//                         setItems={setItems}\r\n//                         disableBorderRadius={true}\r\n//                         style={{ borderRadius: 30, borderColor: '#97B2FF', height: 40 }}\r\n//                         textStyle={{\r\n//                             fontSize: 18,\r\n//                             color: '#707070',\r\n//                         }}\r\n//                     />\r\n//                 </View>\r\n//                 <Text style={{ fontSize: 20, fontWeight: 'bold' }}>\r\n//                     Select Exercises:\r\n//                 </Text>\r\n//                 <FlatList\r\n//                     style={{ marginVertical: 20 }}\r\n//                     data={[\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Squats',\r\n//                             image: require('../../asserts/images/squats.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: true,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                         {\r\n//                             name: 'Warm up',\r\n//                             image: require('../../asserts/images/warmup.png'),\r\n//                             calo: 100,\r\n//                             time: 12,\r\n//                             isChoose: false,\r\n//                         },\r\n//                     ]}\r\n//                     renderItem={({ item }) => (\r\n//                         <TouchableOpacity\r\n//                             style={{ flexDirection: 'row', marginVertical: 10 }}\r\n//                             onPress={() => navigation.navigate('ExerciseDetail')}>\r\n//                             <Image\r\n//                                 source={item.image}\r\n//                                 style={{\r\n//                                     height: 70,\r\n//                                     width: 70,\r\n//                                     borderRadius: 35,\r\n//                                     resizeMode: 'contain',\r\n//                                     flex: 2,\r\n//                                 }}\r\n//                             />\r\n//                             <View\r\n//                                 style={{\r\n//                                     width: 130,\r\n//                                     marginHorizontal: 20,\r\n//                                     flexDirection: 'column',\r\n//                                     justifyContent: 'space-around',\r\n//                                     flex: 7,\r\n//                                 }}>\r\n//                                 <View\r\n//                                     style={{\r\n//                                         flexDirection: 'row',\r\n//                                         justifyContent: 'space-between',\r\n//                                         alignItems: 'center',\r\n//                                     }}>\r\n//                                     <Text style={{ fontSize: 22, fontWeight: 'bold', flex: 6 }}>\r\n//                                         {item.name}\r\n//                                     </Text>\r\n//                                     <Text style={{ flex: 4, fontSize: 20 }}>{item.time}x</Text>\r\n//                                 </View>\r\n//                                 <Text style={{ fontSize: 20, color: '#707070' }}>\r\n//                                     {item.calo} Calories Burn\r\n//                                 </Text>\r\n//                             </View>\r\n//                         </TouchableOpacity>\r\n//                     )}\r\n//                 />\r\n//             </View>\r\n//             <View style={styles.touchableOpacityStyle}>\r\n//                 <TouchableOpacity onPress={() => navigation.navigate('AddExercise')}>\r\n//                     <Text style={{ fontSize: 35, fontWeight: '300', color: 'white' }}>+</Text>\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//         </SafeAreaView>\r\n//     );\r\n// };\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FFFFFF',\r\n    },\r\n    body: {\r\n        margin: 30,\r\n    },\r\n    searchBox: {\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        borderColor: '#97B2FF',\r\n        padding: 5,\r\n        flexDirection: 'row',\r\n    },\r\n    touchableOpacityStyle: {\r\n        position: 'absolute',\r\n        width: 50,\r\n        height: 50,\r\n        borderWidth: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        right: 20,\r\n        bottom: 20,\r\n        borderRadius: 25,\r\n        backgroundColor: '#D2A4F3',\r\n        zIndex: 100,\r\n    }\r\n});\r\n// export default Exercises;\r\n"]},"metadata":{},"sourceType":"module"}